@model ThreeAmigos_ExpenseManagement.ViewModels.ProcessExpensesViewModel
@{
    ViewBag.Title = "Expense Management System | Process Expense";
    Layout = "~/Views/Shared/_EM_LayoutPage.cshtml";    
}

@using (Html.BeginForm("ProcessExpenses", "Accounts", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    int month = DateTime.Now.Month;
    int year = DateTime.Now.Year;
    //decimal? companyBudgetRemain = Model.BudgetTracker.(month, year);
    decimal? companyBudgetRemain = Model.BudgetTracker.Budget.RemainingBudget;
    //decimal? companyMonthlyBudget = Model.BudgetTracker.CompanyMonthlyBudget;
    decimal? companyMonthlyBudget = Model.BudgetTracker.Budget.BudgetAmount;
    decimal? usedAmount = companyMonthlyBudget - companyBudgetRemain;
    
@helper HighlightOverBudget(decimal? spent, decimal? remainingAmount)
{
    <text>style="background-color:@(spent > remainingAmount ? "yellow" : "none")"</text>
}
    
<script>
    function ConfirmApprove(spent, budgetAvailable)
    {
        if (spent <= budgetAvailable)
            return true;
        else if (confirm("Approving this expense will exceed the company monthly budget. Do you want to approve ?"))
            return true;
        else
            return false;
    }
</script>
    
    <div class="panel panel-primary">

    @if (companyBudgetRemain >= 0)
    {
       <text>   <b>@String.Format("{0:C}", usedAmount)</b> has been approved from the company monthly budget of <b>@String.Format("{0:C}", companyMonthlyBudget)</b>. </text> <br />
       <text>   You currently have <b>@String.Format("{0:C}", companyBudgetRemain)</b> left for approval.</text>
    }
    else
    {
       <text>   <b>@String.Format("{0:C}", usedAmount)</b> has been approved from the company monthly budget of <b>@String.Format("{0:C}", companyMonthlyBudget)</b>. </text> <br />
       <text>   Accounts have approved over the budget by <b>@String.Format("{0:C}", usedAmount - companyMonthlyBudget)</b></text>
    }                                                                                                                                       
        <div class="panel-heading">
            <h3 class="panel-title">Expenses awaiting for accounts approval</h3>
        </div>

        @foreach (var ExpenseReport in Model.ExpenseReports)
        {
            decimal? totalAmount = 0;
            <table class="table">
                <tr class="info">
                    <th>Report Date: @String.Format("{0:dd/MM/yyyy}", @ExpenseReport.CreateDate)</th>
                    <th>Consultant: @ExpenseReport.CreatedBy.Fullname</th>
                    <th>Supervisor: @ExpenseReport.ApprovedBy.Fullname</th>
                    <th>Department: @ExpenseReport.Department.DepartmentName</th>
                    <th>Status: @ExpenseReport.Status</th>
                    <th>Department budget remain: @String.Format("{0:C}", @Model.BudgetTracker.GetDepartmentBudgetRemain(month, year, @ExpenseReport.Department))</th>
                </tr>
                <tr>
                    <th></th>
                    <th>Expense Date</th>
                    <th>Location</th>
                    <th>Description</th>
                    <th>Receipt File</th>
                    <th>Amount (AUD)</th>
                </tr>

                @foreach (var ExpenseItem in ExpenseReport.ExpenseItems)
                {
                    <tr>
                        <td></td>
                        <td>@String.Format("{0:dd/MM/yyyy}", @ExpenseItem.ExpenseDate)</td>
                        <td>@ExpenseItem.Location</td>
                        <td>@ExpenseItem.Description</td>
                        <td>@if (@ExpenseItem.ReceiptFileName != null && @ExpenseItem.ReceiptFileName != "")
                            {
                                   <a href="/Receipts/@ExpenseItem.ReceiptFileName" target="_blank">
                                   <img src="~/Images/img_pdf_icon.png" /></a>
                            }
                         </td>     
                        <td>@String.Format("{0:C}", @ExpenseItem.AudAmount) </td>
                    </tr> 
                            totalAmount = totalAmount + ExpenseItem.AudAmount;
                }
                
                <tr @HighlightOverBudget(totalAmount, @Model.BudgetTracker.GetDepartmentBudgetRemain(month, year, @ExpenseReport.Department))>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>
                        @Html.ActionLink(
                            "Approve",
                            "ProcessExpenseItem",
                            "Accounts",
                            new { expenseId = ExpenseReport.ExpenseId, status = "ApprovedByAccounts" },
                            new { @class = "btn btn-success", onclick = "return ConfirmApprove(" + totalAmount + "," + companyBudgetRemain + ")" }
                        )
                        &nbsp;
                        @Html.ActionLink(
                            linkText: "Reject",
                            actionName: "ProcessExpenseItem",
                            controllerName: "Accounts",
                            routeValues: new { expenseId = ExpenseReport.ExpenseId, status = "RejectedByAccounts" },
                            htmlAttributes: new { @class = "btn btn-success" }
                        )                        
                        <b>Total:</b></td>
                    <td><b>@String.Format("{0:C}", totalAmount)</b></td>
                  </tr>

                  <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                  </tr>                    
                    
            </table>
        }
    </div>
}

